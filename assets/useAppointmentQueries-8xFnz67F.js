import{c as f,aO as K,aP as i,$ as a}from"./index-CqLWFTqN.js";import{a as e}from"./timezone-CZ9yqTsO.js";/**
 * @license @tabler/icons-react v3.31.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var I=f("outline","building","IconBuilding",[["path",{d:"M3 21l18 0",key:"svg-0"}],["path",{d:"M9 8l1 0",key:"svg-1"}],["path",{d:"M9 12l1 0",key:"svg-2"}],["path",{d:"M9 16l1 0",key:"svg-3"}],["path",{d:"M14 8l1 0",key:"svg-4"}],["path",{d:"M14 12l1 0",key:"svg-5"}],["path",{d:"M14 16l1 0",key:"svg-6"}],["path",{d:"M5 21v-16a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v16",key:"svg-7"}]]);function M(){const n=K(),{data:r=[],isLoading:u,error:s}=i({queryKey:["appointments"],queryFn:e.getAllAppointments,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),c=t=>i({queryKey:["appointment",t],queryFn:()=>e.getAppointmentById(t),enabled:!!t}),m=t=>i({queryKey:["appointments","clinic",t],queryFn:()=>e.getAppointmentsByClinic(t),enabled:!!t,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),y=t=>i({queryKey:["appointments","doctor",t],queryFn:()=>e.getAppointmentsByDoctor(t),enabled:!!t,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),l=t=>i({queryKey:["appointments","user",t],queryFn:()=>e.getAppointmentsByUser(t),enabled:!!t,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),d=t=>i({queryKey:["appointment-status",t],queryFn:()=>e.getAppointmentStatus(t),enabled:!!t,refetchInterval:3e4,refetchOnWindowFocus:!0}),g=a({mutationFn:e.createAppointment,onSuccess:()=>{n.invalidateQueries({queryKey:["appointments"]})}}),A=a({mutationFn:e.createAppointmentWithPatient,onSuccess:t=>{var p,o;n.invalidateQueries({predicate:F=>F.queryKey[0]==="appointments"}),(p=t==null?void 0:t.appointment)!=null&&p.doctorId&&n.invalidateQueries({queryKey:["appointments","doctor",t.appointment.doctorId]}),(o=t==null?void 0:t.appointment)!=null&&o.userId&&localStorage.setItem("lastPatientUserId",t.appointment.userId)}}),v=a({mutationFn:e.updateAppointment,onSuccess:()=>{n.invalidateQueries({predicate:t=>t.queryKey[0]==="appointments"})}}),h=a({mutationFn:e.deleteAppointment,onSuccess:()=>{n.invalidateQueries({predicate:t=>t.queryKey[0]==="appointments"})}}),q=a({mutationFn:({appointmentId:t,newStatus:p})=>e.updateAppointmentStatus(t,p),onSuccess:()=>{n.invalidateQueries({predicate:t=>t.queryKey[0]==="appointments"})}});return{appointments:r,isLoadingAppointments:u,appointmentsError:s,getAppointmentById:c,getAppointmentsByClinic:m,getAppointmentsByDoctor:y,getAppointmentsByUser:l,getAppointmentStatus:d,createAppointment:g,createAppointmentWithPatient:A,updateAppointment:v,deleteAppointment:h,updateAppointmentStatus:q}}export{I,M as u};
