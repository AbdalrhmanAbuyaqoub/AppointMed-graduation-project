import{v as Y,w as Ye,j as r,S as U,L as Re,x as ce,D as le,B as Be,y as Ee,G as T,n as J,z as Ae,E as Ve,F as G,H as Pe,T as O,I as _e,J as Ge,o as Ze,p as ne,q as Je,A as Xe,K as Te,M,Q as et,U as E,V as tt,W as Se,t as rt,X as st,C as nt,Y as ot,P as at}from"./ui-DwlZS5FE.js";import{a as oe,b as K,u as k}from"./query-CPQchYQR.js";import{c as it,a as de,n as j,g as ct}from"./chat-DfZj3kwJ.js";import{r as $,u as lt}from"./router-DP3ythCP.js";import{g as ke}from"./vendor-DJG_os-6.js";import{f as dt,g as ut,h as pt,i as mt,j as ht,k as gt,l as ft,m as Ie,n as $e,I as yt,o as wt,p as xt}from"./icons-CEIuXgFH.js";const Dt=it((e,t)=>({searchQuery:"",currentPage:null,setSearchQuery:s=>e(()=>({searchQuery:s})),setCurrentPage:s=>e(n=>n.currentPage&&n.currentPage!==s?{currentPage:s,searchQuery:""}:{currentPage:s}),clearSearch:()=>e(()=>({searchQuery:""})),getPlaceholder:s=>({appointments:"Search by patient name or appointment ID...",patients:"Search patients...",doctors:"Search doctors...",clinics:"Search clinics..."})[s]||"Search..."})),jt="http://app8.runasp.net/api",z=de.create({baseURL:jt,headers:{"Content-Type":"application/json"}});z.interceptors.request.use(e=>{const t=localStorage.getItem("token");return t&&(e.headers.Authorization=`Bearer ${t}`),e},e=>Promise.reject(e));const L={getAllAppointments:async()=>{try{const e=await z.get("/Appointment/get-all-appointments-with-status");return Array.isArray(e.data)?e.data:[]}catch(e){throw console.error("Error fetching appointments:",e),e}},getAppointmentById:async e=>{try{return(await z.get(`/Appointment/get-by-id-Appointments/${e}`)).data}catch(t){throw console.error(`Error fetching appointment ${e}:`,t),t}},createAppointment:async e=>{try{return(await z.post("/Appointment/create",e)).data}catch(t){throw console.error("Error creating appointment:",t),t}},createAppointmentWithPatient:async e=>{var t,s;try{return console.log("Sending appointment data:",JSON.stringify(e,null,2)),(await z.post("/Appointment/create-with-patient",e)).data}catch(n){throw console.error("Error creating appointment with patient:",n),(t=n.response)!=null&&t.data&&console.error("Server error response:",n.response.data),(s=n.response)!=null&&s.status&&console.error("HTTP status:",n.response.status),n}},updateAppointment:async e=>{try{await z.put("/Appointment/update",e);return}catch(t){throw console.error("Error updating appointment:",t),t}},deleteAppointment:async e=>{try{await z.delete(`/Appointment/delete-Appointments/${e}`);return}catch(t){throw console.error("Error deleting appointment:",t),t}},getAppointmentsByClinic:async e=>{try{const t=await z.get(`/Appointment/get-Appointments-by-clinic/${e}`);return Array.isArray(t.data)?t.data:[]}catch(t){throw console.error(`Error fetching appointments for clinic ${e}:`,t),t}},getAppointmentsByDoctor:async e=>{try{const t=await z.get(`/Appointment/get-Appointments-by-doctor/${e}`);return Array.isArray(t.data)?t.data:[]}catch(t){throw console.error(`Error fetching appointments for doctor ${e}:`,t),t}},getAppointmentsByUser:async e=>{try{const t=await z.get(`/Appointment/get-Appointments-by-user/${e}`);return Array.isArray(t.data)?t.data:[]}catch(t){throw console.error(`Error fetching appointments for user ${e}:`,t),t}},getAvailableDoctors:async()=>{try{const e=await z.get("/Appointment/get-available-doctors");return Array.isArray(e.data)?e.data:[]}catch(e){throw console.error("Error fetching available doctors:",e),e}},getAllDoctorsWorkingHours:async()=>{try{const e=await z.get("/Appointment/all-doctors-working-hours");return Array.isArray(e.data)?e.data:[]}catch(e){throw console.error("Error fetching all doctors working hours:",e),e}},updateAppointmentStatus:async(e,t)=>{try{return(await z.put(`/Appointment/update-status/${e}?newStatus=${t}`)).data}catch(s){throw s}},getAppointmentStatus:async e=>{try{return(await z.get(`/Appointment/status-only/${e}`)).data}catch(t){throw t}}};function ue(){const e=oe(),{data:t=[],isLoading:s,error:n}=K({queryKey:["appointments"],queryFn:L.getAllAppointments,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),p=o=>K({queryKey:["appointment",o],queryFn:()=>L.getAppointmentById(o),enabled:!!o}),m=o=>K({queryKey:["appointments","clinic",o],queryFn:()=>L.getAppointmentsByClinic(o),enabled:!!o,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),f=o=>K({queryKey:["appointments","doctor",o],queryFn:()=>L.getAppointmentsByDoctor(o),enabled:!!o,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),x=o=>K({queryKey:["appointments","user",o],queryFn:()=>L.getAppointmentsByUser(o),enabled:!!o,refetchInterval:3e4,refetchOnWindowFocus:!0,staleTime:0}),d=o=>K({queryKey:["appointment-status",o],queryFn:()=>L.getAppointmentStatus(o),enabled:!!o,refetchInterval:3e4,refetchOnWindowFocus:!0}),c=k({mutationFn:L.createAppointment,onSuccess:()=>{e.invalidateQueries({queryKey:["appointments"]})}}),w=k({mutationFn:L.createAppointmentWithPatient,onSuccess:o=>{var i,y;e.invalidateQueries({predicate:D=>D.queryKey[0]==="appointments"}),(i=o==null?void 0:o.appointment)!=null&&i.doctorId&&e.invalidateQueries({queryKey:["appointments","doctor",o.appointment.doctorId]}),(y=o==null?void 0:o.appointment)!=null&&y.userId&&localStorage.setItem("lastPatientUserId",o.appointment.userId)}}),g=k({mutationFn:L.updateAppointment,onSuccess:()=>{e.invalidateQueries({predicate:o=>o.queryKey[0]==="appointments"})}}),l=k({mutationFn:L.deleteAppointment,onSuccess:()=>{e.invalidateQueries({predicate:o=>o.queryKey[0]==="appointments"})}}),a=k({mutationFn:({appointmentId:o,newStatus:i})=>L.updateAppointmentStatus(o,i),onSuccess:()=>{e.invalidateQueries({predicate:o=>o.queryKey[0]==="appointments"})}});return{appointments:t,isLoadingAppointments:s,appointmentsError:n,getAppointmentById:p,getAppointmentsByClinic:m,getAppointmentsByDoctor:f,getAppointmentsByUser:x,getAppointmentStatus:d,createAppointment:c,createAppointmentWithPatient:w,updateAppointment:g,deleteAppointment:l,updateAppointmentStatus:a}}const At="http://app8.runasp.net/api",H=de.create({baseURL:At,headers:{"Content-Type":"application/json"}});H.interceptors.request.use(e=>{const t=localStorage.getItem("token");return t&&(e.headers.Authorization=`Bearer ${t}`),e},e=>Promise.reject(e));const B={getAllClinics:async()=>{try{const e=await H.get("/Clinic/get-all");return Array.isArray(e.data)?e.data:[]}catch(e){return console.error("Error fetching clinics:",e),[]}},getClinicById:async e=>{var t,s;try{return(await H.get(`/Clinic/get-by-id/${e}`)).data}catch(n){throw console.error(`Error fetching clinic ${e}:`,n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to fetch clinic")}},getDoctors:async e=>{var t,s;try{const n=await H.get(`/Clinic/get-doctors/${e}`);return Array.isArray(n.data)?n.data:[]}catch(n){throw console.error(`Error fetching doctors for clinic ${e}:`,n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to fetch doctors")}},createClinic:async e=>{var t,s;try{return(await H.post("/Clinic/create",e)).data}catch(n){throw console.error("Error creating clinic:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to create clinic")}},updateClinic:async e=>{var t,s;try{await H.put("/Clinic/update",e);return}catch(n){throw console.error("Error updating clinic:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to update clinic")}},addDoctor:async e=>{var t,s;try{return(await H.post("/Clinic/add-doctor",e)).data}catch(n){throw console.error("Error adding doctor:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to add doctor")}},deleteClinic:async e=>{var t,s;try{await H.delete(`/Clinic/delete/${e}`);return}catch(n){throw new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to delete clinic")}},updateDoctor:async e=>{var t,s;try{await H.put("/Clinic/update-doctor",e);return}catch(n){throw console.error("Error updating doctor:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to update doctor")}},deleteDoctor:async e=>{var t,s;try{await H.delete(`/Clinic/delete-doctor/${e}`);return}catch(n){throw console.error("Error deleting doctor:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to delete doctor")}},updateDoctorWorkingHours:async e=>{var t,s;try{console.log("Updating working hours with payload:",JSON.stringify(e));const n=await H.put("/Clinic/update-working-hours-doctor",e);return console.log("Server response:",n.data),n.data}catch(n){throw console.error("Error updating doctor working hours:",n),n.response&&console.error("Server error response:",n.response.data),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to update working hours")}},createDoctorWorkingHours:async e=>{var t,s;try{console.log("Adding working hours with payload:",JSON.stringify(e));const n=await H.post("/Clinic/add-working-hours-doctor",e);return console.log("Server response:",n.data),n.data}catch(n){throw console.error("Error adding doctor working hours:",n),n.response&&console.error("Server error response:",n.response.data),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to add working hours")}}};function Fe(e){const t=oe(),s=K({queryKey:["clinics"],queryFn:B.getAllClinics,initialData:[],refetchOnMount:!0,staleTime:0,cacheTime:1e3*60*5}),n=K({queryKey:["clinic",e],queryFn:()=>B.getClinicById(e),enabled:!!e}),p=K({queryKey:["clinic-doctors",e],queryFn:()=>B.getDoctors(e),enabled:!!e}),m=(s.data||[]).reduce((l,a)=>a.doctors?[...l,...a.doctors.map(o=>({...o,clinicId:a.id,clinicName:a.name}))]:l,[]),f=k({mutationFn:l=>B.createClinic(l),onSuccess:l=>{t.invalidateQueries({queryKey:["clinics"]}),j.show({title:"Success",message:"Clinic created successfully",color:"green"})},onError:l=>{j.show({title:"Error",message:l.message||"Failed to create clinic",color:"red"})}}),x=k({mutationFn:l=>B.updateClinic(l),onSuccess:(l,a)=>{t.invalidateQueries({queryKey:["clinics"]}),t.invalidateQueries({queryKey:["clinic",a.id]}),t.invalidateQueries({queryKey:["clinic-doctors",a.id]}),j.show({title:"Success",message:"Clinic updated successfully",color:"green"})},onError:l=>{j.show({title:"Error",message:l.message||"Failed to update clinic",color:"red"})}}),d=k({mutationFn:l=>B.addDoctor(l),onSuccess:(l,a)=>{t.invalidateQueries({queryKey:["clinics"]}),t.invalidateQueries({queryKey:["clinic",a.clinicId]}),t.invalidateQueries({queryKey:["clinic-doctors",a.clinicId]}),j.show({title:"Success",message:"Doctor added successfully",color:"green"})},onError:l=>{j.show({title:"Error",message:l.message||"Failed to add doctor",color:"red"})}}),c=k({mutationFn:l=>B.deleteClinic(l),onSuccess:(l,a)=>{t.invalidateQueries({queryKey:["clinics"]}),j.show({title:"Success",message:"Clinic deleted successfully",color:"green"})},onError:l=>{j.show({title:"Error",message:l.message||"Failed to delete clinic",color:"red"})}}),w=k({mutationFn:l=>B.updateDoctor(l),onSuccess:(l,a)=>{t.invalidateQueries({queryKey:["clinics"]}),t.invalidateQueries({queryKey:["clinic-doctors",a.clinicId]}),j.show({title:"Success",message:"Doctor updated successfully",color:"green"})},onError:l=>{j.show({title:"Error",message:l.message||"Failed to update doctor",color:"red"})}}),g=k({mutationFn:l=>B.deleteDoctor(l),onSuccess:(l,a)=>{t.invalidateQueries({queryKey:["clinics"]}),j.show({title:"Success",message:"Doctor deleted successfully",color:"green"})},onError:l=>{j.show({title:"Error",message:l.message||"Failed to delete doctor",color:"red"})}});return{clinics:s.data||[],clinic:n.data,doctors:e?p.data||[]:m,isLoading:s.isLoading||n.isLoading||p.isLoading,isError:s.isError||n.isError||p.isError,error:s.error||n.error||p.error,createClinic:f.mutateAsync,updateClinic:x.mutateAsync,addDoctor:d.mutateAsync,deleteClinic:c.mutateAsync,updateDoctor:w.mutateAsync,deleteDoctor:g.mutateAsync,isCreating:f.isPending,isUpdating:x.isPending,isAddingDoctor:d.isPending,isDeleting:c.isPending,isUpdatingDoctor:w.isPending,isDeletingDoctor:g.isPending}}var re={exports:{}},St=re.exports,ve;function vt(){return ve||(ve=1,function(e,t){(function(s,n){e.exports=n()})(St,function(){var s="minute",n=/[+-]\d\d(?::?\d\d)?/g,p=/([+-]|\d\d)/g;return function(m,f,x){var d=f.prototype;x.utc=function(i){var y={date:i,utc:!0,args:arguments};return new f(y)},d.utc=function(i){var y=x(this.toDate(),{locale:this.$L,utc:!0});return i?y.add(this.utcOffset(),s):y},d.local=function(){return x(this.toDate(),{locale:this.$L,utc:!1})};var c=d.parse;d.parse=function(i){i.utc&&(this.$u=!0),this.$utils().u(i.$offset)||(this.$offset=i.$offset),c.call(this,i)};var w=d.init;d.init=function(){if(this.$u){var i=this.$d;this.$y=i.getUTCFullYear(),this.$M=i.getUTCMonth(),this.$D=i.getUTCDate(),this.$W=i.getUTCDay(),this.$H=i.getUTCHours(),this.$m=i.getUTCMinutes(),this.$s=i.getUTCSeconds(),this.$ms=i.getUTCMilliseconds()}else w.call(this)};var g=d.utcOffset;d.utcOffset=function(i,y){var D=this.$utils().u;if(D(i))return this.$u?0:D(this.$offset)?g.call(this):this.$offset;if(typeof i=="string"&&(i=function(P){P===void 0&&(P="");var W=P.match(n);if(!W)return null;var u=(""+W[0]).match(p)||["-",0,0],F=u[0],Q=60*+u[1]+ +u[2];return Q===0?0:F==="+"?Q:-Q}(i),i===null))return this;var S=Math.abs(i)<=16?60*i:i,b=this;if(y)return b.$offset=S,b.$u=i===0,b;if(i!==0){var I=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(b=this.local().add(S+I,s)).$offset=S,b.$x.$localOffset=I}else b=this.utc();return b};var l=d.format;d.format=function(i){var y=i||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return l.call(this,y)},d.valueOf=function(){var i=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*i},d.isUTC=function(){return!!this.$u},d.toISOString=function(){return this.toDate().toISOString()},d.toString=function(){return this.toDate().toUTCString()};var a=d.toDate;d.toDate=function(i){return i==="s"&&this.$offset?x(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():a.call(this)};var o=d.diff;d.diff=function(i,y,D){if(i&&this.$u===i.$u)return o.call(this,i,y,D);var S=this.local(),b=x(i).local();return o.call(S,b,y,D)}}})}(re)),re.exports}var bt=vt();const pe=ke(bt);var se={exports:{}},Ct=se.exports,be;function Et(){return be||(be=1,function(e,t){(function(s,n){e.exports=n()})(Ct,function(){var s={year:0,month:1,day:2,hour:3,minute:4,second:5},n={};return function(p,m,f){var x,d=function(l,a,o){o===void 0&&(o={});var i=new Date(l),y=function(D,S){S===void 0&&(S={});var b=S.timeZoneName||"short",I=D+"|"+b,P=n[I];return P||(P=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:D,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",timeZoneName:b}),n[I]=P),P}(a,o);return y.formatToParts(i)},c=function(l,a){for(var o=d(l,a),i=[],y=0;y<o.length;y+=1){var D=o[y],S=D.type,b=D.value,I=s[S];I>=0&&(i[I]=parseInt(b,10))}var P=i[3],W=P===24?0:P,u=i[0]+"-"+i[1]+"-"+i[2]+" "+W+":"+i[4]+":"+i[5]+":000",F=+l;return(f.utc(u).valueOf()-(F-=F%1e3))/6e4},w=m.prototype;w.tz=function(l,a){l===void 0&&(l=x);var o,i=this.utcOffset(),y=this.toDate(),D=y.toLocaleString("en-US",{timeZone:l}),S=Math.round((y-new Date(D))/1e3/60),b=15*-Math.round(y.getTimezoneOffset()/15)-S;if(!Number(b))o=this.utcOffset(0,a);else if(o=f(D,{locale:this.$L}).$set("millisecond",this.$ms).utcOffset(b,!0),a){var I=o.utcOffset();o=o.add(i-I,"minute")}return o.$x.$timezone=l,o},w.offsetName=function(l){var a=this.$x.$timezone||f.tz.guess(),o=d(this.valueOf(),a,{timeZoneName:l}).find(function(i){return i.type.toLowerCase()==="timezonename"});return o&&o.value};var g=w.startOf;w.startOf=function(l,a){if(!this.$x||!this.$x.$timezone)return g.call(this,l,a);var o=f(this.format("YYYY-MM-DD HH:mm:ss:SSS"),{locale:this.$L});return g.call(o,l,a).tz(this.$x.$timezone,!0)},f.tz=function(l,a,o){var i=o&&a,y=o||a||x,D=c(+f(),y);if(typeof l!="string")return f(l).tz(y);var S=function(W,u,F){var Q=W-60*u*1e3,R=c(Q,F);if(u===R)return[Q,u];var N=c(Q-=60*(R-u)*1e3,F);return R===N?[Q,R]:[W-60*Math.min(R,N)*1e3,Math.max(R,N)]}(f.utc(l,i).valueOf(),D,y),b=S[0],I=S[1],P=f(b).utcOffset(I);return P.$x.$timezone=y,P},f.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},f.tz.setDefault=function(l){x=l}}})}(se)),se.exports}var Pt=Et();const me=ke(Pt);Y.extend(pe);Y.extend(me);const Ne=[{day:"Sunday",letter:"S",value:0},{day:"Monday",letter:"M",value:1},{day:"Tuesday",letter:"T",value:2},{day:"Wednesday",letter:"W",value:3},{day:"Thursday",letter:"T",value:4},{day:"Friday",letter:"F",value:5},{day:"Saturday",letter:"S",value:6}],Ce=e=>{if(!e||e==="00:00:00")return"";try{const t=Y().format("YYYY-MM-DD");return Y.utc(`${t} ${e}`).tz(Y.tz.guess()).format("HH:mm")}catch(t){return console.error("Error converting UTC to local time:",t),""}},qe=e=>(e==null?void 0:e.startTime)!=="00:00:00"&&(e==null?void 0:e.endTime)!=="00:00:00",Tt=()=>{const e={};return Ne.forEach(t=>{e[t.day]={isAvailable:!1,from:"",to:""}}),e},kt=(e,t)=>{const s=e.find(p=>p.doctorId===Number(t));if(!s)return console.log(`Doctor ${t} not found in API response`),null;if(!s.workingHours||s.workingHours.length===0)return console.log(`Doctor ${s.doctorName} (ID: ${t}) has no working hours set`),s.message&&console.log(`API Message: ${s.message}`),Tt();const n={};return Ne.forEach(p=>{const m=s.workingHours.find(f=>f.dayOfWeek===p.value);m&&qe(m)?n[p.day]={isAvailable:!0,from:Ce(m.startTime),to:Ce(m.endTime)}:n[p.day]={isAvailable:!1,from:"",to:""}}),n},It=e=>{const t={};return e.forEach(s=>{var m;const n=s.doctorId,p=[];((m=s.workingHours)==null?void 0:m.length)>0?s.workingHours.forEach(f=>{qe(f)&&p.push(f.dayOfWeek)}):p.push(0,1,2,3,4,5,6),t[n]=p}),t},Me=()=>L.getAllDoctorsWorkingHours();function Bt(e){const t=oe(),s=K({queryKey:["working-hours",e],queryFn:async()=>{const m=await Me();return kt(m,e)},enabled:!!e,onError:m=>{j.show({title:"Error",message:"Failed to load working hours",color:"red"})}}),n=k({mutationFn:B.updateDoctorWorkingHours,onSuccess:()=>{t.invalidateQueries({queryKey:["working-hours",e]}),t.invalidateQueries({queryKey:["all-doctors-working-hours"]}),j.show({title:"Success",message:"Working hours updated successfully",color:"green"})},onError:m=>{j.show({title:"Error",message:m.message||"Failed to update working hours",color:"red"})}}),p=k({mutationFn:B.createDoctorWorkingHours,onSuccess:()=>{t.invalidateQueries({queryKey:["working-hours",e]}),t.invalidateQueries({queryKey:["all-doctors-working-hours"]}),j.show({title:"Success",message:"Working hours created successfully",color:"green"})},onError:m=>{j.show({title:"Error",message:m.message||"Failed to create working hours",color:"red"})}});return{workingHours:s.data,isLoading:s.isLoading,error:s.error,updateWorkingHours:n.mutate,createWorkingHours:p.mutate,isUpdating:n.isPending,isCreating:p.isPending}}function $t(){const e=K({queryKey:["all-doctors-working-hours"],queryFn:async()=>{const t=await Me();return It(t)},staleTime:3e5,onError:t=>{console.error("Error fetching all doctors working hours:",t)}});return{doctorsWorkingDays:e.data||{},isLoading:e.isLoading,error:e.error}}const Ft="http://app8.runasp.net/api",V=de.create({baseURL:Ft,headers:{"Content-Type":"application/json"}});V.interceptors.request.use(e=>{const t=localStorage.getItem("access_token");return t&&(e.headers.Authorization=`Bearer ${t}`),e},e=>Promise.reject(e));const _={sendVerificationCode:async e=>{var t,s;try{return(await V.post("/Users/send-verification-code",{email:e})).data}catch(n){throw console.error("Error sending verification code:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to send verification code")}},verifyCode:async(e,t)=>{var s,n;try{return(await V.post("/Users/verify-code",{email:e,code:t})).data}catch(p){throw console.error("Error verifying code:",p),new Error(((n=(s=p.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to verify code")}},getPatients:async()=>{var e,t;try{const s=await V.get("/Users/get-ALL-patients");return s.data.isSuccess&&Array.isArray(s.data.result)?s.data.result:(console.warn("Unexpected response format from get-patients:",s.data),[])}catch(s){throw console.error("Error fetching patients:",s),new Error(((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to fetch patients")}},banPatient:async e=>{var t,s;try{return(await V.post(`/Users/ban/${e}`)).data}catch(n){throw console.error("Error banning patient:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to ban patient")}},unbanPatient:async e=>{var t,s;try{return(await V.post(`/Users/unban/${e}`)).data}catch(n){throw console.error("Error unbanning patient:",n),new Error(((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||"Failed to unban patient")}},getResetToken:async e=>{var t,s,n;try{console.log("Getting reset token for email:",e);const p=await V.post("/Users/reset-token",JSON.stringify(e));return console.log("Reset token response:",p.data),p.data}catch(p){throw console.error("Error getting reset token:",p),console.error("Error response data:",(t=p.response)==null?void 0:t.data),new Error(((n=(s=p.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to get reset token")}},resetPassword:async e=>{var t,s,n,p,m,f,x,d,c,w;try{console.log("Reset Password Request Body:",e);const g=await V.post("/Users/ResetPassword",e);return console.log("Reset Password Response:",g.data),g.data}catch(g){throw console.error("Error resetting password:",g),console.error("Error response data:",(t=g.response)==null?void 0:t.data),console.error("Full error response:",g.response),(n=(s=g.response)==null?void 0:s.data)!=null&&n.errors&&console.error("API validation errors:",g.response.data.errors),new Error(((m=(p=g.response)==null?void 0:p.data)==null?void 0:m.message)||((x=(f=g.response)==null?void 0:f.data)==null?void 0:x.messages)||(((w=(c=(d=g.response)==null?void 0:d.data)==null?void 0:c.errors)==null?void 0:w.length)>0?g.response.data.errors.join(", "):"Failed to reset password"))}},deleteAccount:async(e,t)=>{var s,n,p;try{console.log("Delete Account Request - Email:",e,"ID:",t);const m=await V.delete(`/Users/delete-user?email=${e}&id=${t}`);return console.log("Delete Account Response:",m.data),m.data}catch(m){throw console.error("Error deleting account:",m),console.error("Error response data:",(s=m.response)==null?void 0:s.data),new Error(((p=(n=m.response)==null?void 0:n.data)==null?void 0:p.message)||"Failed to delete account")}}};function Nt(){const e=oe(),t=K({queryKey:["patients"],queryFn:_.getPatients,initialData:[],refetchOnMount:!0,staleTime:0,cacheTime:1e3*60*5}),s=k({mutationFn:_.banPatient,onMutate:async d=>{await e.cancelQueries({queryKey:["patients"]});const c=e.getQueryData(["patients"]);return e.setQueryData(["patients"],w=>w.map(g=>g.id===d?{...g,isBanned:!0}:g)),{previousPatients:c}},onSuccess:()=>{e.invalidateQueries({queryKey:["patients"]}),j.show({title:"Success",message:"Patient has been banned",color:"red"})},onError:(d,c,w)=>{e.setQueryData(["patients"],w.previousPatients),j.show({title:"Error",message:d.message||"Failed to ban patient",color:"red"})}}),n=k({mutationFn:_.unbanPatient,onMutate:async d=>{await e.cancelQueries({queryKey:["patients"]});const c=e.getQueryData(["patients"]);return e.setQueryData(["patients"],w=>w.map(g=>g.id===d?{...g,isBanned:!1}:g)),{previousPatients:c}},onSuccess:()=>{e.invalidateQueries({queryKey:["patients"]}),j.show({title:"Success",message:"Patient has been unbanned",color:"green"})},onError:(d,c,w)=>{e.setQueryData(["patients"],w.previousPatients),j.show({title:"Error",message:d.message||"Failed to unban patient",color:"red"})}}),p=k({mutationFn:_.getResetToken,onError:d=>{j.show({title:"Error",message:d.message||"Failed to get reset token",color:"red"})}}),m=k({mutationFn:_.resetPassword,onError:d=>{j.show({title:"Error",message:d.message||"Failed to reset password",color:"red"})}}),f=k({mutationFn:async d=>{try{const c=await _.getResetToken(d.email),w=(c==null?void 0:c.token)||c;if(!w)throw new Error("Failed to get reset token");const g={email:d.email,oldPassword:d.oldPassword,newPassword:d.newPassword,confirmNewPassword:d.confirmNewPassword,Token:w};return await _.resetPassword(g)}catch(c){throw c}},onSuccess:()=>{j.show({title:"Success",message:"Password reset successfully",color:"green"})},onError:d=>{j.show({title:"Error",message:d.message||"Failed to reset password",color:"red"})}}),x=k({mutationFn:({email:d,id:c})=>_.deleteAccount(d,c),onMutate:async({id:d})=>{await e.cancelQueries({queryKey:["patients"]});const c=e.getQueryData(["patients"]);return e.setQueryData(["patients"],w=>w.filter(g=>g.id!==d)),{previousPatients:c}},onSuccess:()=>{e.invalidateQueries({queryKey:["patients"]}),j.show({title:"Success",message:"Patient deleted successfully",color:"green"})},onError:(d,{id:c},w)=>{w!=null&&w.previousPatients&&e.setQueryData(["patients"],w.previousPatients),j.show({title:"Error",message:d.message||"Failed to delete patient",color:"red"})}});return{patients:t.data||[],isLoading:t.isLoading,isError:t.isError,error:t.error,refetch:t.refetch,banPatient:s.mutate,unbanPatient:n.mutate,getResetToken:p.mutate,resetPassword:m.mutate,resetPasswordWithToken:f.mutate,deleteAccount:x.mutate,isGettingResetToken:p.isPending,isResettingPassword:f.isPending,isDeletingAccount:x.isPending}}Y.extend(pe);Y.extend(me);function ze({onSubmit:e,isLoading:t,initialValues:s=null}){const{doctors:n}=Fe(),{patients:p,isLoading:m}=Nt(),{doctorsWorkingDays:f}=$t(),[x,d]=$.useState("new"),c=Ye({initialValues:s||{doctorId:"",patientId:"",firstName:"",lastName:"",email:"",phoneNumber:"",address:"",startTime:null,endTime:null,notes:""},validate:{doctorId:a=>a?null:"Please select a doctor",patientId:a=>x==="existing"&&!a?"Please select a patient":null,firstName:a=>x==="new"&&!(a!=null&&a.trim())?"First name is required":null,lastName:a=>x==="new"&&!(a!=null&&a.trim())?"Last name is required":null,email:a=>x==="new"?a!=null&&a.trim()?/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(a)?null:"Invalid email format":"Email is required":null,phoneNumber:a=>x==="new"&&!(a!=null&&a.trim())?"Phone number is required":null,address:a=>x==="new"&&!(a!=null&&a.trim())?"Address is required":null,startTime:a=>a?null:"Please select appointment start time",endTime:a=>a?null:"Please select appointment end time"}});$.useEffect(()=>{if(c.values.startTime){const a=new Date(c.values.startTime);a.setMinutes(a.getMinutes()+30),c.setFieldValue("endTime",a)}},[c.values.startTime]),$.useEffect(()=>{x==="existing"?c.setValues({...c.values,firstName:"",lastName:"",email:"",phoneNumber:"",address:"",patientId:""}):c.setValues({...c.values,patientId:""})},[x]);const w=a=>{if(!c.values.doctorId||!f)return!1;const o=parseInt(c.values.doctorId),i=f[o]||[];if(i.length===0)return!1;const y=Y(a).day();return!i.includes(y)},g=a=>{if(!a)return null;const i=new Date(a).toISOString();return console.log("Converting date:",a,"to ISO:",i),i},l=a=>{console.log("Form values before processing:",{startTime:a.startTime,endTime:a.endTime,patientType:x,values:a});let o;x==="existing"?o={startDate:g(a.startTime),endDate:g(a.endTime),notes:a.notes?a.notes.trim():"",doctorId:parseInt(a.doctorId),userId:a.patientId}:o={firstName:a.firstName.trim(),lastName:a.lastName.trim(),email:a.email.trim(),phoneNumber:a.phoneNumber.trim(),address:a.address.trim(),startDate:g(a.startTime),endDate:g(a.endTime),notes:a.notes?a.notes.trim():"",doctorId:parseInt(a.doctorId)},o.patientType=x,console.log("Submitting appointment data:",o),e(o)};return r.jsx("form",{onSubmit:c.onSubmit(l),children:r.jsxs(U,{pos:"relative",children:[r.jsx(Re,{visible:t}),r.jsx(ce,{radius:"md",label:"Doctor",placeholder:"Select a doctor",data:n.map(a=>({value:a.id.toString(),label:`${a.name} (${a.clinicName})`})),searchable:!0,required:!0,...c.getInputProps("doctorId")}),r.jsx(le,{label:"Patient Details",labelPosition:"center"}),r.jsx(Be,{children:r.jsx(Ee,{radius:"md",value:x,onChange:d,data:[{label:"New Patient",value:"new"},{label:"Existing Patient",value:"existing"}],fullWidth:!0})}),x==="existing"?r.jsx(ce,{radius:"md",label:"Select Patient",placeholder:"Choose an existing patient",data:p.map(a=>({value:a.id,label:a.fullName+" - "+a.email})),searchable:!0,required:!0,disabled:m,...c.getInputProps("patientId")}):r.jsxs(r.Fragment,{children:[r.jsxs(T,{grow:!0,children:[r.jsx(J,{radius:"md",label:"First Name",placeholder:"Enter patient first name",required:!0,...c.getInputProps("firstName")}),r.jsx(J,{radius:"md",label:"Last Name",placeholder:"Enter patient last name",required:!0,...c.getInputProps("lastName")})]}),r.jsx(J,{radius:"md",label:"Email",placeholder:"Enter patient email",type:"email",required:!0,...c.getInputProps("email")}),r.jsx(J,{radius:"md",label:"Phone Number",placeholder:"Enter patient phone number",required:!0,...c.getInputProps("phoneNumber")}),r.jsx(J,{radius:"md",label:"Address",placeholder:"Enter patient address",required:!0,...c.getInputProps("address")})]}),r.jsx(le,{label:"Appointment Details",labelPosition:"center"}),r.jsxs(T,{grow:!0,children:[r.jsx(Ae,{firstDayOfWeek:0,radius:"md",timePickerProps:{withDropdown:!0,popoverProps:{withinPortal:!1},format:"12h",withSeconds:!1},label:"Start Time",placeholder:"Appointment start time",required:!0,clearable:!0,valueFormat:"DD MMM YYYY hh:mm A",minDate:new Date,excludeDate:w,weekendDays:[5],...c.getInputProps("startTime")}),r.jsx(Ae,{firstDayOfWeek:0,radius:"md",timePickerProps:{withDropdown:!0,popoverProps:{withinPortal:!1},format:"12h"},label:"End Time",placeholder:"Appointment end time",required:!0,clearable:!0,valueFormat:"DD MMM YYYY hh:mm A",minDate:c.values.startTime||new Date,excludeDate:w,weekendDays:[],...c.getInputProps("endTime")})]}),r.jsx(Ve,{radius:"md",label:"Notes",placeholder:"Add any notes about the appointment",...c.getInputProps("notes")}),r.jsx(T,{justify:"flex-end",mt:"md",children:r.jsx(G,{type:"submit",loading:t,radius:"md",children:s?"Update Appointment":"Create Appointment"})})]})})}function qt({opened:e,onClose:t}){const{createAppointmentWithPatient:s,createAppointment:n}=ue(),p=async f=>{var x,d,c,w,g,l,a;try{let o;const i=f.patientType==="new";if(i){const{patientType:y,...D}=f;o=await s.mutateAsync(D)}else{const{patientType:y,...D}=f;o=await n.mutateAsync(D)}if(i&&o.userCreated&&o.temporaryPassword){const y=r.jsxs(U,{gap:"xs",children:[r.jsx(O,{size:"sm",children:"Appointment created successfully! A new patient account has been created."}),r.jsxs(T,{gap:"xs",align:"center",children:[r.jsx(O,{size:"sm",fw:500,children:"Temporary Password:"}),r.jsx(_e,{children:o.temporaryPassword}),r.jsx(Ge,{value:o.temporaryPassword,children:({copied:D,copy:S})=>r.jsx(Ze,{label:D?"Copied":"Copy password",children:r.jsx(ne,{color:D?"teal":"blue",onClick:S,size:"sm",variant:"light",children:D?r.jsx(dt,{size:16}):r.jsx(ut,{size:16})})})})]}),r.jsx(O,{size:"xs",c:"dimmed",children:"Please share this password with the patient so they can log in."})]});j.show({title:"Success",message:y,color:"green",autoClose:!1})}else j.show({title:"Success",message:"Appointment created successfully",color:"green"});t()}catch(o){console.error("Full error object:",o);let i="Failed to create appointment";if((d=(x=o.response)==null?void 0:x.data)!=null&&d.error)i=o.response.data.error;else if((w=(c=o.response)==null?void 0:c.data)!=null&&w.message){if(i=o.response.data.message,o.response.data.errors&&Array.isArray(o.response.data.errors)){const y=o.response.data.errors.find(D=>D.code==="DuplicateUserName"||D.code==="DuplicateEmail");if(y)i=`${o.response.data.message}: ${y.description}. Please try with a different email address.`;else{const D=o.response.data.errors.map(S=>S.description);i=`${o.response.data.message}: ${D.join(", ")}`}}}else(l=(g=o.response)==null?void 0:g.data)!=null&&l.errors?i=Object.values(o.response.data.errors).flat().join(", "):(a=o.response)!=null&&a.data?i=JSON.stringify(o.response.data):o.message&&(i=o.message);j.show({title:"Error",message:i,color:"red",autoClose:!1})}},m=s.isPending||n.isPending;return r.jsx(Pe,{radius:"md",overlayProps:{opacity:.4},opened:e,onClose:t,title:"Create New Appointment",position:"right",size:"md",children:r.jsx(ze,{onSubmit:p,isLoading:m})})}function Mt({opened:e,onClose:t,appointment:s,onEdit:n,onDelete:p}){const m=lt();if(!s)return null;const f=s.status,x={0:"Scheduled",1:"Cancelled",2:"Completed",3:"No Show"},d={0:"blue",1:"red",2:"green",3:"orange"};return r.jsx(Pe,{offset:25,radius:"md",shadow:"xl",overlayProps:{opacity:.2},opened:e,onClose:t,styles:{header:{display:"flex",justifyContent:"space-between",alignItems:"center",borderBottom:"1px solid var(--mantine-color-gray-3)"},title:{display:"flex",justifyContent:"space-between",alignItems:"center",flexGrow:1}},title:r.jsxs(r.Fragment,{children:[r.jsx(Te,{size:"md",p:"sm",color:d[f],children:x[f]}),r.jsxs(T,{gap:0,justify:"end",children:[r.jsx(ne,{radius:"md",variant:"subtle",size:"lg",onClick:n,color:"dimmed",children:r.jsx(Ie,{size:20})}),r.jsx(ne,{radius:"md",variant:"subtle",size:"lg",onClick:p,color:"dimmed",children:r.jsx($e,{size:20})})]})]}),position:"right",size:"md",scrollAreaComponent:Je.Autosize,children:r.jsxs(U,{gap:"xs",mt:"md",children:[r.jsxs(T,{justify:"space-between",gap:"md",style:{cursor:"pointer"},onClick:()=>{s.patientId?m(`/patients/${s.patientId}`):console.error("No patient ID available for navigation")},children:[r.jsxs(T,{children:[r.jsx(Xe,{color:"#e7edf6",style:{cursor:"pointer"},onClick:()=>{s.patientId?m(`/patients/${s.patientId}`):console.error("No patient ID available for navigation")},size:"md",radius:"xl",variant:"filled",children:r.jsx(O,{fz:"sm",children:ct({fullName:s.patientName})})}),r.jsxs(U,{gap:"0",c:"dimmed",children:[r.jsx(O,{size:"lg",fw:700,children:s.patientName}),r.jsxs(T,{gap:"4",c:"dimmed",children:[r.jsx(pt,{size:16}),r.jsx(O,{size:"sm",c:"dimmed",children:"00000fixMe000"})]})]})]}),r.jsx(mt,{stroke:1.5,size:24})]}),r.jsx(le,{my:"8"}),r.jsxs(U,{children:[r.jsxs(T,{gap:"xs",c:"dimmed",align:"start",children:[r.jsx(ht,{size:24,color:"black"}),r.jsxs(U,{gap:"0",children:[r.jsx(O,{fw:500,children:s.time}),r.jsx(O,{fw:500,c:"dimmed",children:s.displayDate||s.date})]})]}),r.jsxs(T,{gap:"xs",c:"dimmed",align:"start",children:[r.jsx(gt,{size:24,color:"black"}),r.jsxs(U,{gap:"0",children:[r.jsx(O,{fw:500,children:s.clinicName}),r.jsxs(O,{fw:500,c:"dimmed",children:["Dr. ",s.doctorName]})]})]}),r.jsxs(T,{align:"start",gap:"xs",c:"dimmed",children:[r.jsx(ft,{size:24,color:"black"}),r.jsxs(U,{gap:"0",children:[r.jsx(O,{fw:500,children:"Notes"}),r.jsx(O,{fw:500,c:"dimmed",children:s.notes})]})]})]}),r.jsx(T,{justify:"flex-end",mt:"md"})]})})}const zt=e=>{const t=new Date,s=new Date(t.setHours(0,0,0,0));switch(e){case"today":return[s,new Date(t.setHours(23,59,59,999))];case"this-week":{const n=new Date(s);n.setDate(n.getDate()-n.getDay());const p=new Date(n);return p.setDate(p.getDate()+6),p.setHours(23,59,59,999),[n,p]}case"this-month":{const n=new Date(t.getFullYear(),t.getMonth(),1),p=new Date(t.getFullYear(),t.getMonth()+1,0,23,59,59,999);return[n,p]}default:return[null,null]}},ie=e=>{if(!e)return null;const t=new Date(e);return t.setHours(0,0,0,0),t};function Ot({searchQuery:e,hasFilters:t}){const s=()=>e?"No appointments found matching your search":t?"No appointments found with the current filters":"No appointments found";return r.jsx(E.Tr,{children:r.jsx(E.Td,{colSpan:7,children:r.jsx(rt,{h:100,children:r.jsx(U,{align:"center",gap:"md",children:r.jsx(O,{size:"lg",fw:500,c:"dimmed",children:s()})})})})})}function Qt({appointments:e=[],onAppointmentClick:t,searchQuery:s=""}){var xe,De;const[n,p]=$.useState("all"),[m,f]=$.useState([null,null]),[x,d]=$.useState(!1),[c,w]=$.useState(null),[g,l]=$.useState(!1),[a,o]=$.useState(!1),[i,y]=$.useState(!1),[D,S]=$.useState(e),[b,I]=$.useState(1),P=20,{updateAppointment:W,deleteAppointment:u,updateAppointmentStatus:F}=ue(),Q={0:"Scheduled",1:"Cancelled",2:"Completed",3:"No Show"},R={0:"blue",1:"red",2:"green",3:"orange"};$.useEffect(()=>{S(e)},[e]);const N=h=>{const A=zt(h);f(A)},ae=()=>{if(!m[0]||!m[1])return"Date Range";const h=v=>{if(!v)return"";const q=v instanceof Date?v:new Date(v);return isNaN(q.getTime())?"":q.toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"})},A=h(m[0]),C=h(m[1]);return!A||!C?"Date Range":`${A} - ${C}`},he=h=>{w(h),l(!0)},Oe=async h=>{try{await u.mutateAsync(h),j.show({title:"Success",message:"Appointment deleted successfully",color:"green"})}catch(A){j.show({title:"Error",message:A.message||"Failed to delete appointment",color:"red"})}},Qe=async h=>{try{await W.mutateAsync({id:c.id,...h}),j.show({title:"Success",message:"Appointment updated successfully",color:"green"}),l(!1)}catch(A){j.show({title:"Error",message:A.message||"Failed to update appointment",color:"red"})}},ge=h=>h.rawDate&&h.rawDate instanceof Date?new Date(h.rawDate):h.startDate?new Date(h.startDate):new Date(h.date+" "+h.time),fe=h=>{const A=new Date;A.setHours(0,0,0,0);const C=new Date(h);return C.setHours(0,0,0,0),Math.floor((C.getTime()-A.getTime())/(24*60*60*1e3))},Ue=h=>h.sort((A,C)=>{try{const v=ge(A),q=ge(C),Z=!isNaN(v.getTime()),je=!isNaN(q.getTime());if(!Z&&!je)return(A.id||0)-(C.id||0);if(!Z)return 1;if(!je)return-1;const ee=fe(v),te=fe(q);return ee!==te?ee>=0&&te<0?-1:ee<0&&te>=0?1:ee-te:v.getTime()-q.getTime()}catch(v){return console.error("Error sorting appointments:",v),(A.id||0)-(C.id||0)}}),We=h=>h.filter(A=>{var C;if(n!=="all"&&A.status!==parseInt(n))return!1;if(s){const v=s.toLowerCase().trim();if(![A.patientName,(C=A.id)==null?void 0:C.toString()].join(" ").toLowerCase().includes(v))return!1}if(m[0]&&m[1])try{const v=ie(new Date(A.date)),q=ie(m[0]),Z=ie(m[1]);if(v&&q&&Z)return v>=q&&v<=Z}catch(v){console.error("Error filtering by date:",v)}return!0});$.useEffect(()=>{const h=We(e),A=Ue(h);S(A),I(1)},[e,n,s,m]);const Le=Math.ceil(D.length/P),ye=(b-1)*P,He=ye+P,we=D.slice(ye,He),X=async(h,A)=>{try{const C=await F.mutateAsync({appointmentId:h,newStatus:A});j.show({title:"Success",message:C.message||"Appointment status updated successfully",color:"green"});const v=D.map(q=>q.id===h?{...q,status:C.newStatus}:q);S(v)}catch(C){j.show({title:"Error",message:C.message||"Failed to update appointment status",color:"red"})}},Ke=h=>{w(h),y(!0),t&&t(h)};return r.jsxs(U,{children:[r.jsx(T,{mt:"sm",justify:"start",w:"100%",mb:"md",children:r.jsxs(T,{gap:"md",children:[r.jsx(Ee,{size:"md",radius:"md",value:n,onChange:p,data:[{label:"All",value:"all"},{label:"Scheduled",value:"0"},{label:"Completed",value:"2"},{label:"Cancelled",value:"1"},{label:"No Show",value:"3"}]}),r.jsxs(M,{shadow:"md",radius:"lg",opened:x,onChange:d,position:"bottom-start",width:"targetWidth",children:[r.jsx(M.Target,{children:r.jsx(G,{size:"md",radius:"md",variant:"subtle",rightSection:r.jsx(yt,{color:"black",size:18}),children:ae()})}),r.jsx(M.Dropdown,{p:"md",children:r.jsxs(U,{gap:"xs",children:[r.jsxs(T,{py:"sm",w:"100%",justify:"left",children:[r.jsx(G,{size:"sm",radius:"md",variant:"subtle",onClick:()=>N("today"),children:"Today"}),r.jsx(G,{size:"sm",radius:"md",variant:"subtle",onClick:()=>N("this-week"),children:"This Week"}),r.jsx(G,{radius:"md",size:"sm",variant:"subtle",onClick:()=>N("this-month"),children:"This Month"})]}),r.jsx(et,{size:"sm",type:"range",value:m,onChange:h=>{const[A,C]=h;if(A&&C){const v=new Date(C);v.setHours(23,59,59,999),f([A,v])}else f(h)},numberOfColumns:2})]})})]})]})}),r.jsxs(E,{verticalSpacing:"sm",highlightOnHover:!0,children:[r.jsx(E.Thead,{children:r.jsxs(E.Tr,{children:[r.jsx(E.Th,{children:"ID"}),r.jsx(E.Th,{children:"Patient"}),r.jsx(E.Th,{children:"Doctor"}),r.jsx(E.Th,{children:"Clinic"}),r.jsx(E.Th,{children:"Date"}),r.jsx(E.Th,{children:"Time"}),r.jsx(E.Th,{children:"Status"})]})}),r.jsx(E.Tbody,{children:we.length===0?r.jsx(Ot,{searchQuery:s,hasFilters:n!=="all"||m[0]&&m[1]}):we.map(h=>{const A=h.status,C=Q[A]||"Scheduled",v=R[A]||"blue";return r.jsxs(E.Tr,{style:{cursor:"pointer"},onClick:()=>Ke(h),children:[r.jsx(E.Td,{children:h.id}),r.jsx(E.Td,{children:h.patientName}),r.jsx(E.Td,{children:h.doctorName}),r.jsx(E.Td,{children:h.clinicName}),r.jsx(E.Td,{children:h.displayDate||h.date}),r.jsx(E.Td,{children:h.time}),r.jsx(E.Td,{children:r.jsx(Te,{size:"md",color:v,children:C})}),r.jsx(E.Td,{children:r.jsx(T,{gap:"xs",onClick:q=>q.stopPropagation(),children:r.jsxs(M,{shadow:"md",width:200,children:[r.jsx(M.Target,{children:r.jsx(ne,{variant:"subtle",color:"gray",children:r.jsx(wt,{size:16})})}),r.jsxs(M.Dropdown,{children:[r.jsx(M.Label,{children:"Update Status"}),r.jsx(M.Item,{onClick:()=>X(h.id,0),color:"blue",children:"Mark as Scheduled"}),r.jsx(M.Item,{onClick:()=>X(h.id,1),color:"red",children:"Mark as Cancelled"}),r.jsx(M.Item,{onClick:()=>X(h.id,2),color:"green",children:"Mark as Completed"}),r.jsx(M.Item,{onClick:()=>X(h.id,3),color:"orange",children:"Mark as No Show"}),r.jsx(M.Divider,{}),r.jsx(M.Label,{children:"Actions"}),r.jsx(M.Item,{leftSection:r.jsx(Ie,{size:14}),onClick:()=>he(h),children:"Edit"}),r.jsx(M.Item,{leftSection:r.jsx($e,{size:14}),color:"red",onClick:()=>{w(h),o(!0)},children:"Delete"})]})]})})})]},h.id)})})]}),D.length>0&&r.jsx(T,{justify:"center",mt:"lg",children:r.jsx(tt,{value:b,onChange:I,total:Le,size:"sm",radius:"md"})}),r.jsx(Se,{opened:g,onClose:()=>l(!1),title:"Edit Appointment",size:"lg",children:c&&r.jsx(ze,{initialValues:{doctorId:(De=(xe=c.doctor)==null?void 0:xe.id)==null?void 0:De.toString(),patientName:c.patientName,patientPhone:c.patientPhone||"",startTime:new Date(c.rawDate),notes:c.notes||""},onSubmit:Qe,isLoading:W.isPending})}),r.jsx(Se,{opened:a,onClose:()=>o(!1),title:"Delete Appointment",size:"sm",children:r.jsxs(U,{children:[r.jsxs(O,{children:["Are you sure you want to delete this appointment for"," ",c==null?void 0:c.patientName,"?"]}),r.jsxs(T,{justify:"flex-end",mt:"md",children:[r.jsx(G,{variant:"light",onClick:()=>o(!1),children:"Cancel"}),r.jsx(G,{color:"red",loading:u.isPending,onClick:()=>{Oe(c.id),o(!1)},children:"Delete"})]})]})}),r.jsx(Mt,{opened:i,onClose:()=>y(!1),appointment:c,onEdit:()=>{y(!1),l(!0)},onDelete:()=>{y(!1),o(!0)}})]})}Y.extend(pe);Y.extend(me);function Ut(){const[e,t]=$.useState(null),[s,n]=$.useState(null),{searchQuery:p}=Dt(),[m,{open:f,close:x}]=st(!1),{clinics:d,doctors:c,isLoading:w,error:g}=Fe(),{appointments:l,isLoadingAppointments:a,appointmentsError:o,getAppointmentsByClinic:i,getAppointmentsByDoctor:y}=ue(),{data:D}=i(e),{data:S}=y(s),b=s?S:e?D:l,I=$.useCallback(u=>{if(!u||u==="all")t(null),n(null);else if(u.startsWith("clinic-")){const F=u.replace("clinic-","");t(F),n(null)}else if(u.startsWith("doctor-")){const F=u.replace("doctor-","");n(F),t(null)}},[]),P=[{group:"General",items:[{value:"all",label:"All Appointments"}]},{group:"Clinics",items:d.map(u=>({value:`clinic-${u.id}`,label:u.name}))},{group:"Doctors",items:c.map(u=>({value:`doctor-${u.id}`,label:`${u.name} (${u.clinicName})`}))}],W=(b||[]).map(u=>{var F,Q,R;try{const N=u.startDate?Y.utc(u.startDate).tz(Y.tz.guess()):null;if(!N||!N.isValid())return{...u,id:u.id,patientName:u.patientName,doctorName:((F=u.doctor)==null?void 0:F.name)||"N/A",clinicName:u.clinicName||"N/A",date:"Invalid Date",time:"Invalid Time",status:u.status!==void 0?u.status:0,doctor:u.doctor,userId:u.userId,patientId:u.patientId};const ae=N.format("YYYY-MM-DD");return{id:u.id,patientName:u.patientName,doctorName:((Q=u.doctor)==null?void 0:Q.name)||"N/A",clinicName:u.clinicName||"N/A",rawDate:N.toDate(),date:ae,displayDate:N.format("MMM D, YYYY"),time:N.format("hh:mm A"),status:u.status!==void 0?u.status:0,doctor:u.doctor,patientPhone:u.patientPhone,notes:u.notes,userId:u.userId,patientId:u.patientId}}catch(N){return console.error("Error formatting appointment:",N),{...u,id:u.id,patientName:u.patientName,doctorName:((R=u.doctor)==null?void 0:R.name)||"N/A",clinicName:u.clinicName||"N/A",date:"Error",displayDate:"Error",time:"Error",status:u.status!==void 0?u.status:0,doctor:u.doctor,userId:u.userId,patientId:u.patientId}}});return r.jsx(nt,{pt:12,fluid:!0,maw:1232,children:r.jsxs(U,{children:[r.jsx(ot,{fz:"24px",order:2,children:"Appointments"}),r.jsxs(T,{mt:40,justify:"space-between",children:[r.jsx(ce,{w:200,size:"lg",radius:"md",data:P,placeholder:"Select clinic or doctor",disabled:w,error:g==null?void 0:g.message,onChange:I,value:s?`doctor-${s}`:e?`clinic-${e}`:"all",comboboxProps:{width:500,position:"bottom-start"},styles:{dropdown:{borderRadius:"var(--mantine-radius-md)",boxShadow:"var(--mantine-shadow-md)",minWidth:"200px"}}}),r.jsx(G,{onClick:f,leftSection:r.jsx(xt,{size:16}),variant:"outline",size:"lg",radius:"xl",children:"New Appointment"})]}),r.jsx(at,{withBorder:!0,radius:"md",p:"md",children:a?r.jsx("div",{children:"Loading appointments..."}):o?r.jsxs("div",{children:["Error loading appointments: ",o.message]}):r.jsx(Qt,{appointments:W,searchQuery:p})}),r.jsx(qt,{opened:m,onClose:x})]})})}const Vt=Object.freeze(Object.defineProperty({__proto__:null,default:Ut},Symbol.toStringTag,{value:"Module"}));export{Mt as A,qt as C,Ne as D,Bt as a,pe as b,Dt as c,ue as d,$t as e,Nt as f,Vt as g,me as t,Fe as u};
