import{b as e,aC as i,d as s,O as r,r as l,j as n,C as a,L as o,G as t,P as d,h as c,T as m,f as h,a2 as x,aB as j,z as u,e as p,aa as g,a3 as f}from"./index-BwajA8ZI.js";import{u as C}from"./useClinicQueries-YDHrXMm9.js";import{N as v}from"./NotificationService-zJ3ne1zi.js";import{D as z}from"./DeleteConfirmationModal-NbvcnnZK.js";import{C as N}from"./CreateDoctorDrawer-ARJB8qhm.js";import{A as b}from"./ActionIcon-DezTz9Pm.js";import{I as y}from"./IconArrowLeft-prgWLKJe.js";import{T as D}from"./Title-BFkF6Qaq.js";import{I as T}from"./IconCheck-Dpo9Liwu.js";import{I}from"./IconX-Z5yCwWJG.js";import{I as w}from"./IconEdit-D_DkOnRz.js";import{B as k}from"./Badge-C7klQjz6.js";import{I as S,a as M}from"./IconTrash-CDQov167.js";import{T as E}from"./Table-xGtI38X2.js";import{I as q}from"./IconMail-L9jxAJ-I.js";import{I as B}from"./IconMapPin-rXIr653w.js";import"./useQuery-Bb8Fuvgw.js";import"./useMutation-CLdZPAH1.js";import"./useDoctorQueries-JukiAoYU.js";import"./Select-nRORTan3.js";import"./CheckIcon-B2Dwv-7p.js";
/**
 * @license @tabler/icons-react v3.31.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var L=e("outline","user-plus","IconUserPlus",[["path",{d:"M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0",key:"svg-0"}],["path",{d:"M16 19h6",key:"svg-1"}],["path",{d:"M19 16v6",key:"svg-2"}],["path",{d:"M6 21v-2a4 4 0 0 1 4 -4h4",key:"svg-3"}]]);function P(){const{id:e}=i(),P=s();r();const[$,A]=l.useState({firstName:"",lastName:"",email:"",address:"",phoneNumber:"",selectedClinic:e?e.toString():""}),[O,F]=l.useState(!1),[Q,G]=l.useState(""),[U,H]=l.useState(!1),[J,K]=l.useState(!1),{clinic:R,doctors:X,isLoading:V,isError:W,error:Y,addDoctor:Z,updateClinic:_,deleteClinic:ee,isAddingDoctor:ie,isUpdating:se,isDeleting:re}=C(Number(e)),le=()=>{G(""),F(!1)};return V?n.jsx(a,{pt:20,maw:1232,fluid:!0,children:n.jsx(o,{visible:!0})}):W?n.jsxs(a,{pt:20,maw:1232,fluid:!0,children:[n.jsxs(t,{mb:"xl",children:[n.jsx(b,{variant:"subtle",onClick:()=>P("/clinics"),size:"lg",children:n.jsx(y,{size:20})}),n.jsx(D,{order:2,children:"Clinic Not Found"})]}),n.jsx(d,{radius:"md",p:"xl",withBorder:!0,children:n.jsx(c,{children:n.jsxs(m,{c:"red",children:["Error: ",Y.message]})})})]}):R?n.jsxs(a,{pt:20,maw:1232,fluid:!0,children:[n.jsx(z,{isOpen:U,onClose:()=>H(!1),onConfirm:async()=>{if(X&&X.length>0)return v.error("Cannot Delete Clinic",`This clinic has ${X.length} doctor${1!==X.length?"s":""} assigned to it. Please remove all doctors before deleting the clinic.`),void H(!1);try{await ee(Number(e)),P("/clinics")}catch(i){H(!1)}},title:"Delete Clinic",itemName:`"${R.name}"`,isLoading:re,additionalMessage:X&&0===X.length?"This clinic has no doctors assigned to it.":null}),n.jsxs(t,{mb:"xl",children:[n.jsx(b,{hiddenFrom:"sm",variant:"subtle",onClick:()=>P("/clinics"),size:"lg",children:n.jsx(y,{size:20})}),n.jsx(D,{order:2,children:"Clinic Details"})]}),n.jsx(d,{p:"xl",radius:"md",withBorder:!0,maw:800,children:n.jsx(h,{gap:"xl",children:n.jsxs(t,{gap:"xl",align:"flex-start",children:[n.jsx(x,{size:"xl",radius:"50%",variant:"filled",color:"var(--mantine-primary-color-filled)",children:n.jsx(j,{size:40})}),n.jsxs(h,{gap:"xs",style:{flex:1},children:[O?n.jsxs(t,{children:[n.jsx(u,{value:Q,onChange:e=>G(e.target.value),error:Q.trim()?null:"Name is required",size:"md",style:{flex:1}}),n.jsx(b,{color:"green",onClick:async()=>{if(Q.trim()&&Q!==R.name)try{await _({id:Number(e),name:Q.trim()}),F(!1)}catch(i){}else le()},loading:se,disabled:!Q.trim()||Q===R.name,size:"lg",children:n.jsx(T,{size:20})}),n.jsx(b,{color:"red",onClick:le,size:"lg",children:n.jsx(I,{size:20})})]}):n.jsxs(t,{children:[n.jsx(D,{order:2,fz:28,children:R.name}),n.jsx(b,{variant:"subtle",onClick:()=>{G(R.name),F(!0)},c:"black",children:n.jsx(w,{size:20})})]}),n.jsx(t,{gap:"md",children:n.jsx(k,{size:"lg",variant:"filled",color:"blue",children:"CLINIC"})})]}),n.jsxs(h,{align:"flex-end",gap:"xs",children:[X.length>0&&n.jsx(m,{size:"xs",c:"orange",fw:500,ta:"right",children:"Remove all doctors to enable deletion"}),n.jsx(p,{color:"red",radius:"md",variant:"outline",leftSection:n.jsx(S,{size:16}),onClick:()=>H(!0),loading:re,disabled:X&&X.length>0,title:X&&X.length>0?`Cannot delete clinic with ${X.length} doctor${1!==X.length?"s":""} assigned`:"Delete clinic",children:"Delete Clinic"})]})]})})}),n.jsx(d,{p:"xl",mt:"xl",radius:"md",withBorder:!0,maw:800,children:n.jsxs(h,{gap:"xl",children:[n.jsxs(t,{justify:"space-between",align:"center",children:[n.jsx(D,{order:3,children:"Doctors"}),n.jsxs(t,{gap:"xs",children:[n.jsx(g,{size:20,color:"var(--mantine-color-gray-6)"}),n.jsxs(m,{size:"sm",c:"dimmed",children:[X.length," doctor",1!==X.length?"s":""]}),n.jsx(p,{variant:"filled",radius:"md",leftSection:n.jsx(L,{size:16}),onClick:()=>K(!0),ml:"md",children:"new Doctor"})]})]}),0===X.length?n.jsx(c,{py:"xl",children:n.jsxs(h,{align:"center",gap:"md",children:[n.jsx(g,{size:48,opacity:.4}),n.jsx(m,{size:"lg",c:"dimmed",children:"No doctors assigned"}),n.jsx(m,{size:"sm",c:"dimmed",children:"This clinic has no doctors assigned to it yet."})]})}):n.jsxs(E,{highlightOnHover:!0,verticalSpacing:"sm",children:[n.jsx(E.Thead,{children:n.jsxs(E.Tr,{children:[n.jsx(E.Th,{c:"dimmed",children:"Name"}),n.jsx(E.Th,{c:"dimmed",children:"Email"}),n.jsx(E.Th,{c:"dimmed",children:"Phone"}),n.jsx(E.Th,{c:"dimmed",children:"Address"})]})}),n.jsx(E.Tbody,{children:X.map(e=>n.jsxs(E.Tr,{style:{cursor:"pointer"},onClick:()=>P(`/doctors/${e.id}`),children:[n.jsx(E.Td,{children:n.jsxs(t,{gap:"sm",children:[n.jsx(x,{size:"sm",radius:"50%",variant:"filled",color:"gray.3",children:n.jsx(m,{size:"xs",children:f({fullName:e.name})})}),n.jsx(m,{size:"sm",fw:500,children:e.name})]})}),n.jsx(E.Td,{children:n.jsxs(t,{gap:"xs",children:[n.jsx(q,{size:16,opacity:.6}),n.jsx(m,{size:"sm",children:e.email||"Not provided"})]})}),n.jsx(E.Td,{children:n.jsxs(t,{gap:"xs",children:[n.jsx(M,{size:16,opacity:.6}),n.jsx(m,{size:"sm",children:e.phoneNumber||"Not provided"})]})}),n.jsx(E.Td,{children:n.jsxs(t,{gap:"xs",children:[n.jsx(B,{size:16,opacity:.6}),n.jsx(m,{size:"sm",children:e.address||"Not provided"})]})})]},e.id))})]})]})}),n.jsx(N,{opened:J,onClose:()=>K(!1),onSubmit:async()=>{if(!$.firstName.trim())return void v.error("Error","Doctor first name is required");if(!$.lastName.trim())return void v.error("Error","Doctor last name is required");if(!$.email.trim())return void v.error("Error","Doctor email is required");if(!$.phoneNumber.trim())return void v.error("Error","Doctor phone number is required");const i={clinicId:Number(e),firstName:$.firstName.trim(),lastName:$.lastName.trim(),email:$.email.trim(),address:$.address.trim(),phoneNumber:$.phoneNumber.trim()};await Z(i),A({firstName:"",lastName:"",email:"",address:"",phoneNumber:"",selectedClinic:e?e.toString():""})},doctorData:$,setDoctorData:A,isLoading:ie,clinicId:Number(e)})]}):n.jsxs(a,{pt:20,maw:1232,fluid:!0,children:[n.jsxs(t,{mb:"xl",children:[n.jsx(b,{variant:"subtle",onClick:()=>P("/clinics"),size:"lg",children:n.jsx(y,{size:20})}),n.jsx(D,{order:2,children:"Clinic Not Found"})]}),n.jsx(d,{radius:"md",p:"xl",withBorder:!0,children:n.jsx(c,{children:n.jsx(m,{c:"dimmed",children:"The requested clinic could not be found."})})})]})}export{P as default};
