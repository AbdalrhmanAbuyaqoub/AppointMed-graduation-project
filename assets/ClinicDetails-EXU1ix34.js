import{b as K,j as e,C as p,L as Q,G as r,p as c,Y as h,P as f,t as z,T as l,S as x,A as I,n as X,K as Y,F as y,U as n}from"./ui-DwlZS5FE.js";import{e as J,u as V,r as u}from"./router-DP3ythCP.js";import{u as W}from"./appointments-D_E_DIOB.js";import{g as Z,i as j}from"./chat-DfZj3kwJ.js";import{D as _}from"./DeleteConfirmationModal-Z1sWrh4u.js";import{C as ee}from"./CreateDoctorDrawer-QBUNG_Zj.js";import{r as D,t as ie,f as se,q as re,m as ne,n as le,c as S,G as te,s as ae,h as de,u as oe}from"./icons-CEIuXgFH.js";import"./vendor-DJG_os-6.js";import"./query-CPQchYQR.js";import"./doctors-DtG2Q8oG.js";function Ne(){const{id:a}=J(),m=V();K();const[t,b]=u.useState({firstName:"",lastName:"",email:"",address:"",phoneNumber:"",selectedClinic:a?a.toString():""}),[E,C]=u.useState(!1),[d,N]=u.useState(""),[k,g]=u.useState(!1),[P,v]=u.useState(!1),{clinic:o,doctors:i,isLoading:q,isError:A,error:B,addDoctor:L,updateClinic:M,deleteClinic:O,isAddingDoctor:F,isUpdating:$,isDeleting:w}=W(Number(a)),U=async()=>{if(!t.firstName.trim()){j.error("Error","Doctor first name is required");return}if(!t.lastName.trim()){j.error("Error","Doctor last name is required");return}if(!t.email.trim()){j.error("Error","Doctor email is required");return}if(!t.phoneNumber.trim()){j.error("Error","Doctor phone number is required");return}const s={clinicId:Number(a),firstName:t.firstName.trim(),lastName:t.lastName.trim(),email:t.email.trim(),address:t.address.trim(),phoneNumber:t.phoneNumber.trim()};await L(s),b({firstName:"",lastName:"",email:"",address:"",phoneNumber:"",selectedClinic:a?a.toString():""})},G=()=>{N(o.name),C(!0)},T=()=>{N(""),C(!1)},H=async()=>{if(!d.trim()||d===o.name){T();return}try{await M({id:Number(a),name:d.trim()}),C(!1)}catch(s){console.error("Failed to update clinic name:",s)}},R=async()=>{if(i&&i.length>0){j.error("Cannot Delete Clinic",`This clinic has ${i.length} doctor${i.length!==1?"s":""} assigned to it. Please remove all doctors before deleting the clinic.`),g(!1);return}try{await O(Number(a)),m("/clinics")}catch(s){console.error("Failed to delete clinic:",s),g(!1)}};return q?e.jsx(p,{pt:20,maw:1232,fluid:!0,children:e.jsx(Q,{visible:!0})}):A?e.jsxs(p,{pt:20,maw:1232,fluid:!0,children:[e.jsxs(r,{mb:"xl",children:[e.jsx(c,{variant:"subtle",onClick:()=>m("/clinics"),size:"lg",children:e.jsx(D,{size:20})}),e.jsx(h,{order:2,children:"Clinic Not Found"})]}),e.jsx(f,{radius:"md",p:"xl",withBorder:!0,children:e.jsx(z,{children:e.jsxs(l,{c:"red",children:["Error: ",B.message]})})})]}):o?e.jsxs(p,{pt:20,maw:1232,fluid:!0,children:[e.jsx(_,{isOpen:k,onClose:()=>g(!1),onConfirm:R,title:"Delete Clinic",itemName:`"${o.name}"`,isLoading:w,additionalMessage:i&&i.length===0?"This clinic has no doctors assigned to it.":null}),e.jsxs(r,{mb:"xl",children:[e.jsx(c,{hiddenFrom:"sm",variant:"subtle",onClick:()=>m("/clinics"),size:"lg",children:e.jsx(D,{size:20})}),e.jsx(h,{order:2,children:"Clinic Details"})]}),e.jsx(f,{p:"xl",radius:"md",withBorder:!0,maw:800,children:e.jsx(x,{gap:"xl",children:e.jsxs(r,{gap:"xl",align:"flex-start",children:[e.jsx(I,{size:"xl",radius:"50%",variant:"filled",color:"var(--mantine-primary-color-filled)",children:e.jsx(ie,{size:40})}),e.jsxs(x,{gap:"xs",style:{flex:1},children:[E?e.jsxs(r,{children:[e.jsx(X,{value:d,onChange:s=>N(s.target.value),error:d.trim()?null:"Name is required",size:"md",style:{flex:1}}),e.jsx(c,{color:"green",onClick:H,loading:$,disabled:!d.trim()||d===o.name,size:"lg",children:e.jsx(se,{size:20})}),e.jsx(c,{color:"red",onClick:T,size:"lg",children:e.jsx(re,{size:20})})]}):e.jsxs(r,{children:[e.jsx(h,{order:2,fz:28,children:o.name}),e.jsx(c,{variant:"subtle",onClick:G,c:"black",children:e.jsx(ne,{size:20})})]}),e.jsx(r,{gap:"md",children:e.jsx(Y,{size:"lg",variant:"filled",color:"blue",children:"CLINIC"})})]}),e.jsxs(x,{align:"flex-end",gap:"xs",children:[i.length>0&&e.jsx(l,{size:"xs",c:"orange",fw:500,ta:"right",children:"Remove all doctors to enable deletion"}),e.jsx(y,{color:"red",radius:"md",variant:"outline",leftSection:e.jsx(le,{size:16}),onClick:()=>g(!0),loading:w,disabled:i&&i.length>0,title:i&&i.length>0?`Cannot delete clinic with ${i.length} doctor${i.length!==1?"s":""} assigned`:"Delete clinic",children:"Delete Clinic"})]})]})})}),e.jsx(f,{p:"xl",mt:"xl",radius:"md",withBorder:!0,maw:800,children:e.jsxs(x,{gap:"xl",children:[e.jsxs(r,{justify:"space-between",align:"center",children:[e.jsx(h,{order:3,children:"Doctors"}),e.jsxs(r,{gap:"xs",children:[e.jsx(S,{size:20,color:"var(--mantine-color-gray-6)"}),e.jsxs(l,{size:"sm",c:"dimmed",children:[i.length," doctor",i.length!==1?"s":""]}),e.jsx(y,{variant:"filled",radius:"md",leftSection:e.jsx(te,{size:16}),onClick:()=>v(!0),ml:"md",children:"new Doctor"})]})]}),i.length===0?e.jsx(z,{py:"xl",children:e.jsxs(x,{align:"center",gap:"md",children:[e.jsx(S,{size:48,opacity:.4}),e.jsx(l,{size:"lg",c:"dimmed",children:"No doctors assigned"}),e.jsx(l,{size:"sm",c:"dimmed",children:"This clinic has no doctors assigned to it yet."})]})}):e.jsxs(n,{highlightOnHover:!0,verticalSpacing:"sm",children:[e.jsx(n.Thead,{children:e.jsxs(n.Tr,{children:[e.jsx(n.Th,{c:"dimmed",children:"Name"}),e.jsx(n.Th,{c:"dimmed",children:"Email"}),e.jsx(n.Th,{c:"dimmed",children:"Phone"}),e.jsx(n.Th,{c:"dimmed",children:"Address"})]})}),e.jsx(n.Tbody,{children:i.map(s=>e.jsxs(n.Tr,{style:{cursor:"pointer"},onClick:()=>m(`/doctors/${s.id}`),children:[e.jsx(n.Td,{children:e.jsxs(r,{gap:"sm",children:[e.jsx(I,{size:"sm",radius:"50%",variant:"filled",color:"gray.3",children:e.jsx(l,{size:"xs",children:Z({fullName:s.name})})}),e.jsx(l,{size:"sm",fw:500,children:s.name})]})}),e.jsx(n.Td,{children:e.jsxs(r,{gap:"xs",children:[e.jsx(ae,{size:16,opacity:.6}),e.jsx(l,{size:"sm",children:s.email||"Not provided"})]})}),e.jsx(n.Td,{children:e.jsxs(r,{gap:"xs",children:[e.jsx(de,{size:16,opacity:.6}),e.jsx(l,{size:"sm",children:s.phoneNumber||"Not provided"})]})}),e.jsx(n.Td,{children:e.jsxs(r,{gap:"xs",children:[e.jsx(oe,{size:16,opacity:.6}),e.jsx(l,{size:"sm",children:s.address||"Not provided"})]})})]},s.id))})]})]})}),e.jsx(ee,{opened:P,onClose:()=>v(!1),onSubmit:U,doctorData:t,setDoctorData:b,isLoading:F,clinicId:Number(a)})]}):e.jsxs(p,{pt:20,maw:1232,fluid:!0,children:[e.jsxs(r,{mb:"xl",children:[e.jsx(c,{variant:"subtle",onClick:()=>m("/clinics"),size:"lg",children:e.jsx(D,{size:20})}),e.jsx(h,{order:2,children:"Clinic Not Found"})]}),e.jsx(f,{radius:"md",p:"xl",withBorder:!0,children:e.jsx(z,{children:e.jsx(l,{c:"dimmed",children:"The requested clinic could not be found."})})})]})}export{Ne as default};
